// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: KCzdJBxTJE
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: vtgKf8zu4R/component
import PageHero from "../../PageHero"; // plasmic-import: MaAtk98o9f/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: TcXkT68Mp6/component
import ValuePropSection from "../../ValuePropSection"; // plasmic-import: 6Zq5_xjO9F/component
import Footer from "../../Footer"; // plasmic-import: 9R5YynM9KVp/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicPageCms.module.css"; // plasmic-import: KCzdJBxTJE/css
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: mrC2Ljeqti/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: 7p8MViVJAB/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: 4WWM9dCuzI/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: Mj5CsVYcA9/icon
import image6Zk4QpLvJs from "./images/image6.svg"; // plasmic-import: ZK4QPLv_Js/picture
import image7RU1GD3ENw from "./images/image7.svg"; // plasmic-import: rU1g-d3eNw/picture
import image2XOaQbmepj8 from "./images/image2.svg"; // plasmic-import: xOaQbmepj8/picture

export const PlasmicPageCms__VariantProps = new Array();

export const PlasmicPageCms__ArgProps = new Array();

function PlasmicPageCms__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <Header
        data-plasmic-name={"header"}
        data-plasmic-override={overrides.header}
        className={classNames("__wab_instance", sty.header)}
      />

      <PageHero
        data-plasmic-name={"pageHero"}
        data-plasmic-override={overrides.pageHero}
        className={classNames("__wab_instance", sty.pageHero)}
        slot={
          "A visual CMS with a powerful editor to design, build, and ship new experiences fast."
        }
        slot2={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__mUvJg)}
            colors={"gray"}
          >
            <Icon12Icon
              className={classNames(defaultcss.all, sty.svg__hEbgH)}
              role={"img"}
            />
          </GraphicIcon>
        }
      >
        {"Content Management system"}
      </PageHero>

      <ValuePropSection
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__bdnoh)}
            role={"img"}
            src={image6Zk4QpLvJs}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__vzkIu)}
        description={
          "Keep full control how your content looks and feels in production directly from Plasmic. What you see is what you get."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__qkixx
            )}
          >
            {"full control"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__d6CJw)}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__hBnRs)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Get autonomy over your content and presentation"}
      />

      <ValuePropSection
        backgroundColor={"green"}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__hm1T)}
            role={"img"}
            src={image7RU1GD3ENw}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__c2Dzz)}
        description={
          "Need to make a quick change? Publish directly from Plasmic, no need to bring up a development environment."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box___7UDmd
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__esvrf)}
            colors={"green"}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__sr1Qg)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Deploy with no coding required"}
      />

      <ValuePropSection
        backgroundColor={"yellow"}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__wuUG)}
            role={"img"}
            src={image2XOaQbmepj8}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__odc2N)}
        description={
          "Iterate quickly on new designs and content and get to market faster. Ship faster, learn faster."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__qBqe0
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon___85O2Y)}
            colors={"yellow"}
          >
            <Icon10Icon
              className={classNames(defaultcss.all, sty.svg__a9AYf)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Test your ideas quickly"}
      />

      <ValuePropSection
        backgroundColor={"orange"}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__pFcS)}
            role={"img"}
            src={image7RU1GD3ENw}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection___6O2Oc)}
        description={
          "No need to change or replace your existing stack. Start with a blurb on a page."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__a0UnZ
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__v2U4T)}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__pyDn7)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Adopt incrementally in any existing React stack"}
      />

      <ValuePropSection
        backgroundColor={"orange"}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__jqeJ2)}
            role={"img"}
            src={image7RU1GD3ENw}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__rCcYh)}
        description={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__n2Gww
            )}
          >
            {
              "Want to eject? Walk away any time with plain React code. They're yours to keep forever."
            }
          </div>
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__adUaZ
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__ta4R4)}
          >
            <Icon5Icon
              className={classNames(defaultcss.all, sty.svg__ux9Lx)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Zero lock-in"}
      />

      <Footer
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames("__wab_instance", sty.footer)}
      />
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "pageHero", "footer"],
  header: ["header"],
  pageHero: ["pageHero"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPageCms__ArgProps,
      internalVariantPropNames: PlasmicPageCms__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPageCms__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPageCms";
  } else {
    func.displayName = `PlasmicPageCms.${nodeName}`;
  }
  return func;
}

export const PlasmicPageCms = Object.assign(
  // Top-level PlasmicPageCms renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageHero: makeNodeComponent("pageHero"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPageCms
    internalVariantProps: PlasmicPageCms__VariantProps,
    internalArgProps: PlasmicPageCms__ArgProps
  }
);

export default PlasmicPageCms;
/* prettier-ignore-end */
