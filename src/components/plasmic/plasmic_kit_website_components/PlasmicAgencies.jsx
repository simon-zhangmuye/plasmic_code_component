// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: jHFCHH5QQ7K
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CommonLandingPage2 from "../../CommonLandingPage2"; // plasmic-import: vfJVtA9eRVA/component
import ValuePropListItem from "../../ValuePropListItem"; // plasmic-import: lJppbKgSOw/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: TcXkT68Mp6/component
import Divider from "../../Divider"; // plasmic-import: SQHouqji3_/component
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: ZsmzGgkZw2/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: k7xdGnvUtPZ_s/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicAgencies.module.css"; // plasmic-import: jHFCHH5QQ7K/css
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: mrC2Ljeqti/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: YhhYiXTtXT/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: 5amV9exkN9/icon
import Icon27Icon from "./icons/PlasmicIcon__Icon27"; // plasmic-import: E2O_OGnBZf/icon
import image87Q5HyGrQzo from "./images/image87.png"; // plasmic-import: q5HyGrQzo/picture
import image41PngOmMOzNfL from "./images/image41Png.png"; // plasmic-import: OmM_OZNfL/picture
import image82LYItEpXgS from "./images/image82.png"; // plasmic-import: lYItEpXgS/picture
import image78QZwEvhzU2 from "./images/image78.png"; // plasmic-import: QZwEvhzU2/picture
import image86ZvTNx6QJy from "./images/image86.png"; // plasmic-import: zvTNx6qJy/picture
import image85KCxujGJaO from "./images/image85.png"; // plasmic-import: KCxujGJaO/picture
import websiteHeroImageTinypngMdyXn0Auz from "./images/websiteHeroImageTinypng.png"; // plasmic-import: MdyXN0Auz/picture
import imageJEb6FwUqh2 from "./images/image.svg"; // plasmic-import: jEB6FWUqh2/picture
import image3Ye53PEpLv from "./images/image3.svg"; // plasmic-import: YE53p_epLv/picture
import image4SuzPkCmZfz from "./images/image4.svg"; // plasmic-import: SuzPKCmZFZ/picture
import image8Pjopgnvz6 from "./images/image8.svg"; // plasmic-import: PJOPGNVZ-6/picture
import image53LFnfKPfDu from "./images/image53.png"; // plasmic-import: LFnfKPfDu/picture
import image904Yo870MHj from "./images/image9.svg"; // plasmic-import: 04YO870mHJ/picture
import image11C1Emdq7MU7 from "./images/image11.svg"; // plasmic-import: C1Emdq7mU7/picture
import image12WiXt2Gdxg from "./images/image12.png"; // plasmic-import: WiXT2gdxg/picture

export const PlasmicAgencies__VariantProps = new Array();

export const PlasmicAgencies__ArgProps = new Array();

function PlasmicAgencies__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <CommonLandingPage2
            data-plasmic-name={"commonLandingPage2"}
            data-plasmic-override={overrides.commonLandingPage2}
            children2={
              "Plug into your existing codebase. Use any framework, backend, hosting, CMS, and more."
            }
            className={classNames("__wab_instance", sty.commonLandingPage2)}
            container={
              <React.Fragment>
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__fSLkI)}
                  role={"img"}
                  src={imageJEb6FwUqh2}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__bz5AV)}
                  role={"img"}
                  src={image3Ye53PEpLv}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___5Xxop)}
                  role={"img"}
                  src={image4SuzPkCmZfz}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___7DaB8)}
                  role={"img"}
                  src={image8Pjopgnvz6}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___4FEas)}
                  role={"img"}
                  src={image53LFnfKPfDu}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__bWm1Y)}
                  role={"img"}
                  src={image904Yo870MHj}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__o1C5X)}
                  role={"img"}
                  src={image11C1Emdq7MU7}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__jbnB)}
                  role={"img"}
                  src={image12WiXt2Gdxg}
                />
              </React.Fragment>
            }
            slot={
              <span>
                <React.Fragment>
                  {"Build engaging digital experiences ⚡️ "}
                </React.Fragment>
                <span style={{ fontStyle: "italic" }}>{"fast"}</span>
                <React.Fragment>{"."}</React.Fragment>
              </span>
            }
            slot2={
              "The web design tool that works seamlessly with your tech stack. The visual CMS that clients love."
            }
            slot3={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__iybui)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__r82ZB)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA13"}
                    data-plasmic-override={overrides.valueA13}
                    actionButton={null}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__pxlSw)}
                        loading={"lazy"}
                        role={"img"}
                        src={image87Q5HyGrQzo}
                      />
                    }
                  >
                    {"Landing pages"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA23"}
                    data-plasmic-override={overrides.valueA23}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA23)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__vVpdo)}
                        loading={"lazy"}
                        role={"img"}
                        src={image41PngOmMOzNfL}
                      />
                    }
                  >
                    {"Conversion pages"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box___1CnLx)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA222222"}
                    data-plasmic-override={overrides.valueA222222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__nKnNj)}
                        loading={"lazy"}
                        role={"img"}
                        src={image82LYItEpXgS}
                      />
                    }
                  >
                    {"Announcement bars"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA222"}
                    data-plasmic-override={overrides.valueA222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img___2TIb)}
                        role={"img"}
                        src={image78QZwEvhzU2}
                      />
                    }
                  >
                    {"Offer overlays"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box___1EAqT)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA2322"}
                    data-plasmic-override={overrides.valueA2322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA2322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img___8Yaaq)}
                        loading={"lazy"}
                        role={"img"}
                        src={image86ZvTNx6QJy}
                      />
                    }
                  >
                    {"Heroes"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA22322"}
                    data-plasmic-override={overrides.valueA22322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA22322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__fbWsv)}
                        loading={"lazy"}
                        role={"img"}
                        src={image85KCxujGJaO}
                      />
                    }
                  >
                    {"Promotional sections"}
                  </SmallValuePropCard>
                </p.Stack>
              </p.Stack>
            }
            slot4={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__kdl97)}
              >
                <ValuePropListItem
                  slot={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__wZbYg
                      )}
                      colors={"lightBlueSolid"}
                    >
                      <Icon12Icon
                        className={classNames(defaultcss.all, sty.svg__ms3F4)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                  slot2={"No-code autonomy."}
                >
                  {
                    "Easy-to-use but powerful drag-and-drop builder to create web experiences incredibly fast."
                  }
                </ValuePropListItem>

                <Divider
                  className={classNames("__wab_instance", sty.divider__rjeIu)}
                />

                <ValuePropListItem
                  slot={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__fAyAi
                      )}
                      colors={"lightBlueSolid"}
                    >
                      <Icon20Icon
                        className={classNames(defaultcss.all, sty.svg__rz3Jr)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                  slot2={"Limitless speed."}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__wh4JV
                    )}
                  >
                    {"The only WYSIWYG builder that never limits you."}
                  </div>
                </ValuePropListItem>

                <Divider
                  className={classNames("__wab_instance", sty.divider__n2Jk)}
                />

                <ValuePropListItem
                  slot={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__splQt
                      )}
                      colors={"lightBlueSolid"}
                    >
                      <Icon22Icon
                        className={classNames(defaultcss.all, sty.svg___9DMgQ)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                  slot2={"Free up developers."}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__ig6KD
                    )}
                  >
                    {
                      "Empower content editors and designers. Let developers focus on code rather than pixel-pushing."
                    }
                  </div>
                </ValuePropListItem>

                <Divider
                  className={classNames("__wab_instance", sty.divider__ncye7)}
                />

                <ValuePropListItem
                  slot={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__cUae
                      )}
                      colors={"lightBlueSolid"}
                    >
                      <Icon27Icon
                        className={classNames(defaultcss.all, sty.svg__jWyKo)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                  slot2={"Hit the ground running."}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__mimWl
                    )}
                  >
                    {
                      "Use your existing design system, import from Figma, or grab our templates."
                    }
                  </div>
                </ValuePropListItem>
              </p.Stack>
            }
            slot6={
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__dpP3)}
                role={"img"}
                src={websiteHeroImageTinypngMdyXn0Auz}
              />
            }
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA222222",
    "valueA222",
    "valueA2322",
    "valueA22322"
  ],

  commonLandingPage2: [
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA222222",
    "valueA222",
    "valueA2322",
    "valueA22322"
  ],

  valueA13: ["valueA13"],
  valueA23: ["valueA23"],
  valueA222222: ["valueA222222"],
  valueA222: ["valueA222"],
  valueA2322: ["valueA2322"],
  valueA22322: ["valueA22322"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAgencies__ArgProps,
      internalVariantPropNames: PlasmicAgencies__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicAgencies__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAgencies";
  } else {
    func.displayName = `PlasmicAgencies.${nodeName}`;
  }
  return func;
}

export const PlasmicAgencies = Object.assign(
  // Top-level PlasmicAgencies renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    commonLandingPage2: makeNodeComponent("commonLandingPage2"),
    valueA13: makeNodeComponent("valueA13"),
    valueA23: makeNodeComponent("valueA23"),
    valueA222222: makeNodeComponent("valueA222222"),
    valueA222: makeNodeComponent("valueA222"),
    valueA2322: makeNodeComponent("valueA2322"),
    valueA22322: makeNodeComponent("valueA22322"),
    // Metadata about props expected for PlasmicAgencies
    internalVariantProps: PlasmicAgencies__VariantProps,
    internalArgProps: PlasmicAgencies__ArgProps
  }
);

export default PlasmicAgencies;
/* prettier-ignore-end */
