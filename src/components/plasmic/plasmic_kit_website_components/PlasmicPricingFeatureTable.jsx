// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: 0JMC2aEx9m
import * as React from "react";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import PricingFeatureTableRow from "../../PricingFeatureTableRow"; // plasmic-import: Xbdmg_vawY/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: k7xdGnvUtPZ_s/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicPricingFeatureTable.module.css"; // plasmic-import: 0JMC2aEx9m/css

export const PlasmicPricingFeatureTable__VariantProps = new Array();

export const PlasmicPricingFeatureTable__ArgProps = new Array();

function PlasmicPricingFeatureTable__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__zzEbZ)}>
        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__vPdam
          )}
          enterprise={
            hasVariant(globalVariants, "screen", "mobilePortrait")
              ? "E"
              : "Enterprise"
          }
          free={
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__br8E4
              )}
            >
              {hasVariant(globalVariants, "screen", "mobilePortrait")
                ? "S"
                : "Starter"}
            </div>
          }
          header={"header"}
          name={
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__lBHqW
              )}
            >
              {"Features"}
            </div>
          }
          pro={
            hasVariant(globalVariants, "screen", "mobilePortrait")
              ? "P"
              : "Professional"
          }
          team={
            hasVariant(globalVariants, "screen", "mobilePortrait")
              ? "T"
              : "Team"
          }
        />

        <div className={classNames(defaultcss.all, sty.box__wJd2P)} />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___5UCpG
          )}
          free={"✓"}
          name={"Plasmic studio editor"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__pjqoA
          )}
          name={"Unlimited projects"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__mw5N0
          )}
          name={"Unlimited code-gen"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__nkzv5
          )}
          free={"✓"}
          name={"Layout engine"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__vKjQr
          )}
          name={"Components"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__tfLi3
          )}
          name={"Style tokens"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___3Doxv
          )}
          name={"Cross-platform"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__zn9Ts
          )}
          name={"Figma import"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__tpc39
          )}
          enterprise={"✓"}
          free={"30"}
          name={"Version history (days)"}
          pro={"30"}
          team={"30"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__rOynI
          )}
          name={"Cross-project imports"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__ojFfi
          )}
          name={"Share links"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__scGm
          )}
          free={"3"}
          name={"Shared workspaces"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__oP44V
          )}
          free={"2"}
          name={"Editors per workspace"}
          pro={"5"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___0Ju4T
          )}
          name={"Unlimited viewers"}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___5G05O
          )}
          free={"  "}
          name={"Admin roles"}
          pro={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__dHtX
          )}
          free={" "}
          name={"Permission groups"}
          pro={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__iyhDy
          )}
          free={" "}
          name={"Advanced permissions"}
          pro={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__a1Nfn
          )}
          free={" "}
          name={"Premium support"}
          pro={" "}
          team={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__lrzm0
          )}
          free={" "}
          name={"Centralized administration"}
          pro={" "}
          team={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___67SuN
          )}
          free={" "}
          name={"Domain capture"}
          pro={" "}
          team={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow__sPtRb
          )}
          free={" "}
          name={"Link access controls"}
          pro={" "}
          team={" "}
        />

        <PricingFeatureTableRow
          className={classNames(
            "__wab_instance",
            sty.pricingFeatureTableRow___0Y1Bz
          )}
          free={" "}
          name={"Organizational content ownership"}
          pro={" "}
          team={" "}
        />
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricingFeatureTable__ArgProps,
      internalVariantPropNames: PlasmicPricingFeatureTable__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPricingFeatureTable__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingFeatureTable";
  } else {
    func.displayName = `PlasmicPricingFeatureTable.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingFeatureTable = Object.assign(
  // Top-level PlasmicPricingFeatureTable renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicPricingFeatureTable
    internalVariantProps: PlasmicPricingFeatureTable__VariantProps,
    internalArgProps: PlasmicPricingFeatureTable__ArgProps
  }
);

export default PlasmicPricingFeatureTable;
/* prettier-ignore-end */
