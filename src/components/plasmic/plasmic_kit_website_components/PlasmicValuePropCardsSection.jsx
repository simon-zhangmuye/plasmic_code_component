// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: 3Qfldk4cSlr
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: ZsmzGgkZw2/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: TcXkT68Mp6/component
import Linky from "../../Linky"; // plasmic-import: EDH0JqEGKc/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicValuePropCardsSection.module.css"; // plasmic-import: 3Qfldk4cSlr/css
import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: oElPELm1et/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: 7p8MViVJAB/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: OsdZlmfSEe/icon

export const PlasmicValuePropCardsSection__VariantProps = new Array(
  "backgrounds"
);

export const PlasmicValuePropCardsSection__ArgProps = new Array(
  "children",
  "slot"
);

function PlasmicValuePropCardsSection__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {
        [sty.root__backgrounds_white]: hasVariant(
          variants,
          "backgrounds",
          "white"
        )
      })}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box___6Ki2K)}
      >
        <div className={classNames(defaultcss.all, sty.box__rdYwr)}>
          {p.renderPlasmicSlot({
            defaultContents: "Limitless expressivity",
            value: args.slot,
            className: classNames(sty.slotSlot)
          })}
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__p5RyP)}
        >
          {p.renderPlasmicSlot({
            defaultContents: (
              <React.Fragment>
                <SmallValuePropCard
                  className={classNames(
                    "__wab_instance",
                    sty.smallValuePropCard___7Hj
                  )}
                  followupLink={
                    <Linky
                      className={classNames("__wab_instance", sty.linky__gV1Be)}
                      link={
                        "https://studio.plasmic.app/?starters=general,site-builder"
                      }
                      style={["noPadding"]}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__oaxHp
                        )}
                      >
                        {"Browse starter projects ->"}
                      </div>
                    </Linky>
                  }
                  icon={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__aq7Sb
                      )}
                      colors={"teal"}
                    >
                      <Icon17Icon
                        className={classNames(defaultcss.all, sty.svg__dcyx1)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                />

                <SmallValuePropCard
                  className={classNames(
                    "__wab_instance",
                    sty.smallValuePropCard___3OPfW
                  )}
                  followupLink={
                    <Linky
                      className={classNames("__wab_instance", sty.linky__ttAm)}
                      link={
                        "https://studio.plasmic.app/?starters=general,site-builder"
                      }
                      style={["noPadding"]}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__ggmhv
                        )}
                      >
                        {"Browse starter projects ->"}
                      </div>
                    </Linky>
                  }
                  icon={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__uxBtf
                      )}
                      colors={"green"}
                    >
                      <Icon6Icon
                        className={classNames(defaultcss.all, sty.svg__uEKeE)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                />

                <SmallValuePropCard
                  className={classNames(
                    "__wab_instance",
                    sty.smallValuePropCard__mvZqT
                  )}
                  followupLink={
                    <Linky
                      className={classNames("__wab_instance", sty.linky___4K2N)}
                      link={
                        "https://studio.plasmic.app/?starters=general,site-builder"
                      }
                      style={["noPadding"]}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__haC2A
                        )}
                      >
                        {"Browse starter projects ->"}
                      </div>
                    </Linky>
                  }
                  icon={
                    <GraphicIcon
                      className={classNames(
                        "__wab_instance",
                        sty.graphicIcon__sWpvw
                      )}
                      colors={"yellow"}
                    >
                      <Icon15Icon
                        className={classNames(defaultcss.all, sty.svg__rt4U)}
                        role={"img"}
                      />
                    </GraphicIcon>
                  }
                />
              </React.Fragment>
            ),

            value: args.children
          })}
        </p.Stack>
      </p.Stack>
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicValuePropCardsSection__ArgProps,
      internalVariantPropNames: PlasmicValuePropCardsSection__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicValuePropCardsSection__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicValuePropCardsSection";
  } else {
    func.displayName = `PlasmicValuePropCardsSection.${nodeName}`;
  }
  return func;
}

export const PlasmicValuePropCardsSection = Object.assign(
  // Top-level PlasmicValuePropCardsSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicValuePropCardsSection
    internalVariantProps: PlasmicValuePropCardsSection__VariantProps,
    internalArgProps: PlasmicValuePropCardsSection__ArgProps
  }
);

export default PlasmicValuePropCardsSection;
/* prettier-ignore-end */
