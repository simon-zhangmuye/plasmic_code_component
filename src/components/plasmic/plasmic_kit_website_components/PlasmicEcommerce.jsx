// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: 0dGBHkGVkF
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CommonLandingPage2 from "../../CommonLandingPage2"; // plasmic-import: vfJVtA9eRVA/component
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: ZsmzGgkZw2/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: k7xdGnvUtPZ_s/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicEcommerce.module.css"; // plasmic-import: 0dGBHkGVkF/css
import image87Q5HyGrQzo from "./images/image87.png"; // plasmic-import: q5HyGrQzo/picture
import image819KjKXf8AA from "./images/image81.png"; // plasmic-import: 9KjKXf8aA/picture
import image83G6DF9FdL from "./images/image83.png"; // plasmic-import: _G6dF9FdL/picture
import image78QZwEvhzU2 from "./images/image78.png"; // plasmic-import: QZwEvhzU2/picture
import image82LYItEpXgS from "./images/image82.png"; // plasmic-import: lYItEpXgS/picture
import image84FyKjl3Owe from "./images/image84.png"; // plasmic-import: fyKJL3owe/picture
import image86ZvTNx6QJy from "./images/image86.png"; // plasmic-import: zvTNx6qJy/picture
import image85KCxujGJaO from "./images/image85.png"; // plasmic-import: KCxujGJaO/picture

export const PlasmicEcommerce__VariantProps = new Array();

export const PlasmicEcommerce__ArgProps = new Array();

function PlasmicEcommerce__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <CommonLandingPage2
            data-plasmic-name={"commonLandingPage2"}
            data-plasmic-override={overrides.commonLandingPage2}
            className={classNames("__wab_instance", sty.commonLandingPage2)}
            slot={
              <span>
                <React.Fragment>
                  {"Build engaging digital experiences ⚡️ "}
                </React.Fragment>
                <span style={{ fontStyle: "italic" }}>{"fast"}</span>
                <React.Fragment>{"."}</React.Fragment>
              </span>
            }
            slot2={
              "The visual page builder and CMS that works seamlessly with your ecommerce tech stack."
            }
            slot3={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__txSpP)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__pc6Bm)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA13"}
                    data-plasmic-override={overrides.valueA13}
                    actionButton={null}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__twpLx)}
                        loading={"lazy"}
                        role={"img"}
                        src={image87Q5HyGrQzo}
                      />
                    }
                  >
                    {"Landing pages"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA23"}
                    data-plasmic-override={overrides.valueA23}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA23)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__cACdO)}
                        loading={"lazy"}
                        role={"img"}
                        src={image819KjKXf8AA}
                      />
                    }
                  >
                    {"Headless storefronts"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__l1X8K)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA22223"}
                    data-plasmic-override={overrides.valueA22223}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA22223)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img___3E58O)}
                        role={"img"}
                        src={image83G6DF9FdL}
                      />
                    }
                  >
                    {"Cart upsells"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA222"}
                    data-plasmic-override={overrides.valueA222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__wJvOh)}
                        role={"img"}
                        src={image78QZwEvhzU2}
                      />
                    }
                  >
                    {"Offer overlays"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__bna29)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA222222"}
                    data-plasmic-override={overrides.valueA222222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__oAebb)}
                        loading={"lazy"}
                        role={"img"}
                        src={image82LYItEpXgS}
                      />
                    }
                  >
                    {"Announcement bars"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA122"}
                    data-plasmic-override={overrides.valueA122}
                    actionButton={null}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__mlj0O)}
                        loading={"lazy"}
                        role={"img"}
                        src={image84FyKjl3Owe}
                      />
                    }
                  >
                    {"Product detail pages"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__deeKy)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA2322"}
                    data-plasmic-override={overrides.valueA2322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA2322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__tjCbf)}
                        loading={"lazy"}
                        role={"img"}
                        src={image86ZvTNx6QJy}
                      />
                    }
                  >
                    {"Heroes"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA22322"}
                    data-plasmic-override={overrides.valueA22322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA22322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr"}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__acZpl)}
                        loading={"lazy"}
                        role={"img"}
                        src={image85KCxujGJaO}
                      />
                    }
                  >
                    {"Promotional sections"}
                  </SmallValuePropCard>
                </p.Stack>
              </p.Stack>
            }
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA22223",
    "valueA222",
    "valueA222222",
    "valueA122",
    "valueA2322",
    "valueA22322"
  ],

  commonLandingPage2: [
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA22223",
    "valueA222",
    "valueA222222",
    "valueA122",
    "valueA2322",
    "valueA22322"
  ],

  valueA13: ["valueA13"],
  valueA23: ["valueA23"],
  valueA22223: ["valueA22223"],
  valueA222: ["valueA222"],
  valueA222222: ["valueA222222"],
  valueA122: ["valueA122"],
  valueA2322: ["valueA2322"],
  valueA22322: ["valueA22322"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEcommerce__ArgProps,
      internalVariantPropNames: PlasmicEcommerce__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicEcommerce__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEcommerce";
  } else {
    func.displayName = `PlasmicEcommerce.${nodeName}`;
  }
  return func;
}

export const PlasmicEcommerce = Object.assign(
  // Top-level PlasmicEcommerce renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    commonLandingPage2: makeNodeComponent("commonLandingPage2"),
    valueA13: makeNodeComponent("valueA13"),
    valueA23: makeNodeComponent("valueA23"),
    valueA22223: makeNodeComponent("valueA22223"),
    valueA222: makeNodeComponent("valueA222"),
    valueA222222: makeNodeComponent("valueA222222"),
    valueA122: makeNodeComponent("valueA122"),
    valueA2322: makeNodeComponent("valueA2322"),
    valueA22322: makeNodeComponent("valueA22322"),
    // Metadata about props expected for PlasmicEcommerce
    internalVariantProps: PlasmicEcommerce__VariantProps,
    internalArgProps: PlasmicEcommerce__ArgProps
  }
);

export default PlasmicEcommerce;
/* prettier-ignore-end */
